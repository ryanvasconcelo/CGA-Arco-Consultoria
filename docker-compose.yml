services:
  cga_db:
    image: postgres:latest
    container_name: cga_postgres_db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - cga_postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: cga_backend_api
    ports:
      - "3333:3333"
      - "5555:5555" # Prisma Studio
    volumes:
      - ./backend:/app # Mapeamos para /app, um nome mais padrão
      - /app/node_modules
    depends_on:
      cga_db:
        condition: service_healthy
    environment:
      DATABASE_URL: ${DATABASE_URL}
      JWT_SECRET: ${JWT_SECRET}
      PORT: 3333 # Definindo a porta via variável de ambiente
    restart: unless-stopped
    command: sh -c "npm install && npx prisma migrate deploy && npx prisma generate && npm run dev"

  frontend:
    # ... (o serviço de frontend continua o mesmo)
    image: node:20-alpine
    container_name: cga_frontend
    working_dir: /app
    volumes:
      - ./frontend:/app
    ports:
      - "5173:5173"
    command: sh -c "npm install --legacy-peer-deps && npm run dev"
    restart: unless-stopped

volumes:
  cga_postgres_data: