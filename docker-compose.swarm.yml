version: '3.9'
services:
  cga_db:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER_FILE: /run/secrets/cga_db_user
      POSTGRES_PASSWORD_FILE: /run/secrets/cga_db_password
    volumes:
      - cga_postgres_data:/var/lib/postgresql/data
    secrets:
      - cga_db_user
      - cga_db_password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$(cat /run/secrets/cga_db_user) -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - ProjecontNet
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  backend:
    image: node:20-alpine
    working_dir: /app
    volumes:
      - /var/lib/docker/volumes/cga_arco_consultoria_data/_data/CGA-Arco-Consultoria/backend:/app
      - /app/node_modules
    environment:
      DB_NAME: ${DB_NAME}
      JWT_SECRET_FILE: /run/secrets/cga_jwt_secret
    secrets:
      - cga_db_user
      - cga_db_password
      - cga_jwt_secret
    command: >
      sh -c "
        DB_USER_VAL=$$(cat /run/secrets/cga_db_user) &&
        DB_PASSWORD_VAL=$$(cat /run/secrets/cga_db_password) &&
        export DATABASE_URL=\"postgresql://$${DB_USER_VAL}:$${DB_PASSWORD_VAL}@cga_db:5432/${DB_NAME}?schema=public\" &&
        npm install &&
        npx prisma migrate deploy &&
        npx prisma generate &&
        npx prisma db seed &&
        npm run dev -- --host 0.0.0.0
      "
    networks:
      - ProjecontNet
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      labels:
        - "traefik.enable=true"
        # Router HTTP (redireciona para HTTPS)
        - "traefik.http.routers.cga-backend-http.rule=Host(`cga.pktech.ai`) && PathPrefix(`/api`)"
        - "traefik.http.routers.cga-backend-http.entrypoints=web"
        - "traefik.http.routers.cga-backend-http.middlewares=redirect-to-https"
        # Router HTTPS
        - "traefik.http.routers.cga-backend.rule=Host(`cga.pktech.ai`) && PathPrefix(`/api`)"
        - "traefik.http.routers.cga-backend.entrypoints=websecure"
        - "traefik.http.routers.cga-backend.tls.certresolver=letsencryptresolver"
        - "traefik.http.routers.cga-backend.priority=100"
        # Service
        - "traefik.http.services.cga-backend.loadbalancer.server.port=3333"
        # Importante para Swarm
        - "traefik.docker.network=ProjecontNet"

  frontend:
    image: node:20-alpine
    working_dir: /app
    volumes:
      - /var/lib/docker/volumes/cga_arco_consultoria_data/_data/CGA-Arco-Consultoria/frontend:/app
      - /app/node_modules
    command: sh -c "npm install --legacy-peer-deps && npm run dev -- --host 0.0.0.0"
    networks:
      - ProjecontNet
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      labels:
        - "traefik.enable=true"
        # Router HTTP (redireciona para HTTPS)
        - "traefik.http.routers.cga-frontend-http.rule=Host(`cga.pktech.ai`)"
        - "traefik.http.routers.cga-frontend-http.entrypoints=web"
        - "traefik.http.routers.cga-frontend-http.middlewares=redirect-to-https"
        # Router HTTPS
        - "traefik.http.routers.cga-frontend.rule=Host(`cga.pktech.ai`)"
        - "traefik.http.routers.cga-frontend.entrypoints=websecure"
        - "traefik.http.routers.cga-frontend.tls.certresolver=letsencryptresolver"
        - "traefik.http.routers.cga-frontend.priority=50"
        # Service
        - "traefik.http.services.cga-frontend.loadbalancer.server.port=5173"
        # Importante para Swarm
        - "traefik.docker.network=ProjecontNet"
        # Middleware de redirecionamento HTTPS
        - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
        - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"

volumes:
  cga_postgres_data:
    name: cga_postgres_data

secrets:
  cga_db_user:
    external: true
  cga_db_password:
    external: true
  cga_jwt_secret:
    external: true

networks:
  ProjecontNet:
    external: true