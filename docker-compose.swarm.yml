version: '3.9'

services:
  cga_db:
    image: postgres:latest
    environment:
      POSTGRES_DB: "cga_db"
      POSTGRES_USER_FILE: /run/secrets/cga_db_user
      POSTGRES_PASSWORD_FILE: /run/secrets/cga_db_password
    volumes:
      - cga_postgres_data:/var/lib/postgresql/data
    secrets:
      - cga_db_user
      - cga_db_password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U docker || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - ProjecontNet
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  backend:
    image: node:20-alpine
    working_dir: /app
    volumes:
      - /var/lib/docker/volumes/cga_arco_consultoria_data/_data/CGA-Arco-Consultoria/backend:/app
      - /app/node_modules
    secrets:
      - cga_db_user
      - cga_db_password
      - cga_jwt_secret
    environment:
      DB_HOST: "cga_db"
      DB_NAME: "cga_db"
      CORS_ORIGIN: "https://cga.pktech.ai"
      NODE_ENV: "production"
      PORT: "3333"
    command: >
      sh -c "
        export DB_USER=$$(cat /run/secrets/cga_db_user)
        export DB_PASSWORD=$$(cat /run/secrets/cga_db_password)
        export JWT_SECRET=$$(cat /run/secrets/cga_jwt_secret)
        export DATABASE_URL=\"postgresql://$${DB_USER}:$${DB_PASSWORD}@$${DB_HOST}:5432/$${DB_NAME}?schema=public\"
        echo 'Aguardando o banco de dados...' && sleep 15;
        echo 'Iniciando o backend...' &&
        npm install --include=dev &&
        npx prisma migrate deploy &&
        npx prisma generate &&
        npx prisma db seed &&
        npm run build &&
        npm start
      "
    networks:
      - ProjecontNet
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.cga-backend.rule=Host(`cga.pktech.ai`) && PathPrefix(`/api`)"
        - "traefik.http.routers.cga-backend.entrypoints=websecure"
        - "traefik.http.routers.cga-backend.tls.certresolver=letsencryptresolver"
        - "traefik.http.services.cga-backend.loadbalancer.server.port=3333"
        - "traefik.docker.network=ProjecontNet"

  frontend:
    image: node:20-alpine
    working_dir: /app
    volumes:
      - /var/lib/docker/volumes/cga_arco_consultoria_data/_data/CGA-Arco-Consultoria/frontend:/app
      - /app/node_modules
    environment:
      VITE_API_BASE_URL: "/api"
    command: sh -c "npm install --legacy-peer-deps && npm run build && npm run preview -- --host 0.0.0.0 --port 5173"
    networks:
      - ProjecontNet
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.cga-frontend-http.rule=Host(`cga.pktech.ai`)"
        - "traefik.http.routers.cga-frontend-http.entrypoints=web"
        - "traefik.http.routers.cga-frontend-http.middlewares=redirect-to-https"
        - "traefik.http.routers.cga-frontend.rule=Host(`cga.pktech.ai`)"
        - "traefik.http.routers.cga-frontend.entrypoints=websecure"
        - "traefik.http.routers.cga-frontend.tls.certresolver=letsencryptresolver"
        - "traefik.http.services.cga-frontend.loadbalancer.server.port=5173"
        - "traefik.docker.network=ProjecontNet"
        - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
        - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"

volumes:
  cga_postgres_data:
    name: cga_postgres_data

secrets:
  cga_db_user:
    external: true
  cga_db_password:
    external: true
  cga_jwt_secret:
    external: true

networks:
  ProjecontNet:
    external: true